{"version":3,"file":"component---src-templates-post-template-post-template-tsx-448a42462d2ebfd6acc7.js","mappings":"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","sources":["webpack://gatsby-starter-lumen/./src/components/Button/Button.tsx","webpack://gatsby-starter-lumen/./src/components/Button/Button.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Comments/Comments.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Content/Content.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Content/Content.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Post.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Post.module.scss","webpack://gatsby-starter-lumen/./src/templates/PostTemplate/PostTemplate.tsx"],"sourcesContent":["import React, { Children, ReactNode } from \"react\";\n\nimport cn from \"classnames\";\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./Button.module.scss\";\n\ninterface Props {\n  className?: string;\n  title?: string;\n  to: string;\n  children?: ReactNode;\n}\n\nconst Button: React.FC<Props> = ({ className, title, to, children }: Props) => (\n  <Link className={cn(styles.button, className)} to={to}>\n    {title ? title : children}\n  </Link>\n);\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport var button = \"Button-module--button--b1113\";","import React, { createRef, useLayoutEffect } from \"react\";\n\nimport { useTheme } from \"@/hooks\";\n\nconst attributes = {\n  src: \"https://giscus.app/client.js\",\n  \"data-repo\": \"eunsonny/eunsonny.github.io\",\n  \"data-repo-id\": \"R_kgDOJdbv1A\",\n  \"data-category\": \"Announcements\",\n  \"data-category-id\": \"DIC_kwDOJdbv1M4CdnX2\",\n  \"data-mapping\": \"title\",\n  \"data-strict\": \"0\",\n  \"data-reactions-enabled\": \"1\",\n  \"data-emit-metadata\": \"0\",\n  \"data-input-position\": \"bottom\",\n  \"data-theme\": \"preferred_color_scheme\",\n  \"data-lang\": \"en\",\n  crossorigin: \"anonymous\",\n  async: \"true\",\n};\n\nfunction Comments() {\n  const [{ mode }] = useTheme();\n  const containerRef = createRef<HTMLDivElement>();\n\n  useLayoutEffect(() => {\n    const giscus = document.createElement(\"script\");\n\n    attributes[\"data-theme\"] = mode;\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      giscus.setAttribute(key, value);\n    });\n\n    if (containerRef.current) {\n      containerRef.current.appendChild(giscus);\n    }\n\n    return () => {\n      giscus.remove();\n    };\n  }, [containerRef]);\n\n  return <div ref={containerRef} />;\n}\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nexport var body = \"Content-module--body--726c2\";\nexport var content = \"Content-module--content--80d58\";\nexport var divider = \"Content-module--divider--ba397\";\nexport var title = \"Content-module--title--09504\";","import React from \"react\";\n\nimport * as styles from \"./Content.module.scss\";\n\ninterface Props {\n  title: string;\n  body: string;\n}\n\nconst Content: React.FC<Props> = ({ body, title }: Props) => (\n  <div className={styles.content}>\n    <h1 className={styles.title}>{title}</h1>\n    <div className={styles.divider} />\n    <div className={styles.body} dangerouslySetInnerHTML={{ __html: body }} />\n    <div className={styles.divider} />\n  </div>\n);\n\nexport default Content;\n","import React from \"react\";\n\nimport { Button } from \"@/components/Button\";\nimport { Image } from \"@/components/Image\";\nimport { ThemeSwitcher } from \"@/components/ThemeSwitcher\";\nimport { useSiteMetadata } from \"@/hooks\";\nimport type { Node } from \"@/types\";\n\nimport { Author } from \"./Author\";\nimport { Comments } from \"./Comments\";\nimport { Content } from \"./Content\";\nimport { Meta } from \"./Meta\";\nimport { Tags } from \"./Tags\";\n\nimport * as styles from \"./Post.module.scss\";\n\ninterface Props {\n  post: Node;\n}\n\nconst Post: React.FC<Props> = ({ post }: Props) => {\n  const { icons } = useSiteMetadata();\n  const { html } = post;\n  const { tagSlugs, slug } = post.fields;\n  const { tags, title, date } = post.frontmatter;\n\n  return (\n    <div className={styles.post}>\n      <div className={styles.buttons}>\n        <Button className={styles.buttonArticles} to=\"/\">\n          <Image path={icons.upRightArrow} alt={\"모든 포스트\"} />\n          <span>All Posts</span>\n        </Button>\n        <ThemeSwitcher />\n      </div>\n\n      <div className={styles.content}>\n        <Content body={html} title={title} />\n      </div>\n\n      <div className={styles.footer}>\n        <Comments />\n        {/* <span>맨 위로 올라가기</span> */}\n        {/* <Meta date={date} /> */}\n        {/* {tags && tagSlugs && <Tags tags={tags} tagSlugs={tagSlugs} />} */}\n        {/* <Author /> */}\n      </div>\n\n      {/* <div className={styles.comments}>\n        <Comments postSlug={slug} postTitle={post.frontmatter.title} />\n      </div> */}\n    </div>\n  );\n};\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport var buttonArticles = \"Post-module--buttonArticles--d793a\";\nexport var buttons = \"Post-module--buttons--2972d\";\nexport var comments = \"Post-module--comments--d3b99\";\nexport var content = \"Post-module--content--3c6e5\";\nexport var footer = \"Post-module--footer--f8705\";\nexport var post = \"Post-module--post--3a994\";","import React from \"react\";\n\nimport { graphql } from \"gatsby\";\n\nimport { Layout } from \"@/components/Layout\";\nimport { Meta } from \"@/components/Meta\";\nimport { Post } from \"@/components/Post\";\nimport { useSiteMetadata } from \"@/hooks\";\nimport { Node } from \"@/types\";\n\ninterface Props {\n  data: {\n    markdownRemark: Node;\n  };\n}\n\nconst PostTemplate: React.FC<Props> = ({ data: { markdownRemark } }: Props) => (\n  <Layout>\n    <Post post={markdownRemark} />\n  </Layout>\n);\n\nexport const query = graphql`\n  query PostTemplate($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        tags\n        title\n        socialImage {\n          publicURL\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: React.FC<Props> = ({ data }) => {\n  const { title, subtitle, url } = useSiteMetadata();\n\n  const {\n    frontmatter: {\n      title: postTitle,\n      description: postDescription = \"\",\n      socialImage,\n    },\n  } = data.markdownRemark;\n\n  const description = postDescription || subtitle;\n  const image = socialImage?.publicURL && url.concat(socialImage?.publicURL);\n\n  return (\n    <Meta\n      title={`${postTitle} - ${title}`}\n      description={description}\n      image={image}\n    />\n  );\n};\n\nexport default PostTemplate;\n"],"names":["className","title","to","children","React","Link","cn","attributes","src","crossorigin","async","mode","useTheme","containerRef","createRef","useLayoutEffect","giscus","document","createElement","Object","entries","forEach","key","value","setAttribute","current","appendChild","remove","ref","divider","body","styles","dangerouslySetInnerHTML","__html","post","icons","useSiteMetadata","html","fields","tagSlugs","slug","frontmatter","tags","date","Button","Image","path","upRightArrow","alt","ThemeSwitcher","Content","Comments","Head","data","subtitle","url","markdownRemark","postTitle","description","postDescription","socialImage","image","publicURL","concat","Meta","Layout","Post"],"sourceRoot":""}